{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","res","json","isDarkAtom","atom","key","default","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","isDark","useRecoilValue","type","series","name","map","price","close","open","high","low","options","theme","mode","chart","width","height","background","stroke","curve","yaxis","show","xaxis","labels","categories","time_close","fill","gradient","gradientToColors","tooltip","y","formatter","value","toFixed","Container","styled","div","PriceInfo","Price","fetchTodayPrice","props","Title","h1","accentColor","Overview","OverviewItem","Description","p","Header","header","Loader","Tabs","Tab","span","isActive","textColor","BackButton","bgColor","Coin","useParams","state","useLocation","chartMatch","useRouteMatch","priceMatch","fetchCoinInfo","isInfoLoading","infoData","fetchCoinTicker","isTickersLoading","tickersData","loading","Helmet","to","rank","symbol","quotes","USD","description","total_supply","max_supply","path","CoinList","ul","li","cardBgColor","Img","img","ToggleTab","Coins","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"wPAAMA,EAAQ,iCAGDC,EAAa,WACxB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAASA,EAAIC,W,iBCFzCC,EAAaC,YAAK,CAC7BC,IAAK,SACLC,SAAS,I,OC6EIC,EA5DD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OACf,EAA4BC,mBAC1B,CAAC,QAASD,IACV,kBFT4B,SAACA,GAC/B,IAAME,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAOX,MAAM,GAAD,OACPF,EADO,kBACWW,EADX,mCAC4CO,EAD5C,gBAC6DL,IACvEV,MAAK,SAACC,GAAD,OAASA,EAAIC,UEIZc,CAAiBR,KACvB,CACES,gBAAiB,MAJbC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAObC,EAASC,YAAelB,GAC9B,OACE,8BACGe,EACC,mBAEA,cAAC,IAAD,CACEI,KAAK,OACLC,OAAQ,CACN,CACEC,KAAM,QACNL,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMM,KAAI,SAACC,GAAD,OAAWA,EAAMC,UAEnC,CACEH,KAAM,OACNL,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMM,KAAI,SAACC,GAAD,OAAWA,EAAME,SAEnC,CACEJ,KAAM,OACNL,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMM,KAAI,SAACC,GAAD,OAAWA,EAAMG,SAEnC,CACEL,KAAM,MACNL,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMM,KAAI,SAACC,GAAD,OAAWA,EAAMI,SAGrCC,QAAS,CACPC,MAAO,CAAEC,KAAMb,EAAS,OAAS,SACjCc,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,WAAY,eAC9CC,OAAQ,CAAEC,MAAO,SAAUJ,MAAO,GAClCK,MAAO,CAAEC,MAAM,GACfC,MAAO,CACLpB,KAAM,WACNqB,OAAQ,CAAEF,MAAM,GAChBG,WAAU,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAMM,KAAI,SAACC,GAAD,OAAWA,EAAMmB,eAEzCC,KAAM,CACJxB,KAAM,WACNyB,SAAU,CAAEC,iBAAkB,CAAC,UAEjCC,QAAS,CACPC,EAAG,CACDC,UAAW,SAACC,GAAD,OAAWA,EAAMC,QAAQ,YCpD9CC,EAAYC,IAAOC,IAAV,0BACTC,EAAYF,IAAOC,IAAV,iDAqCAE,EAjCD,SAAC,GAA4B,IAA1BlD,EAAyB,EAAzBA,OACf,EAA4BC,mBAC1B,CAAC,aAAcD,IACf,kBHJ2B,SAACA,GAC9B,OAAOT,MAAM,GAAD,OAAIF,EAAJ,kBAAsBW,EAAtB,kBAA6CR,MAAK,SAACC,GAAD,OAC5DA,EAAIC,UGEEyD,CAAgBnD,KACtB,CACES,gBAAiB,MAJbC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAQnB,OACE,8BACGD,EACC,aAEA,eAACoC,EAAD,WACE,eAACG,EAAD,0BACQtC,QADR,IACQA,OADR,EACQA,EAAMM,KAAI,SAACmC,GAAD,OAAWA,EAAMhC,KAAKyB,QAAQ,SAEhD,eAACI,EAAD,0BACQtC,QADR,IACQA,OADR,EACQA,EAAMM,KAAI,SAACmC,GAAD,OAAWA,EAAM/B,KAAKwB,QAAQ,SAEhD,eAACI,EAAD,2BACStC,QADT,IACSA,OADT,EACSA,EAAMM,KAAI,SAACmC,GAAD,OAAWA,EAAMjC,MAAM0B,QAAQ,SAElD,eAACI,EAAD,yBACOtC,QADP,IACOA,OADP,EACOA,EAAMM,KAAI,SAACmC,GAAD,OAAWA,EAAM9B,IAAIuB,QAAQ,eClClDQ,EAAQN,IAAOO,GAAV,+DAEA,SAACF,GAAD,OAAWA,EAAM5B,MAAM+B,eAG5BT,EAAYC,IAAOC,IAAV,0FAMTQ,EAAWT,IAAOC,IAAV,yKAORS,EAAeV,IAAOC,IAAV,kOAWZU,EAAcX,IAAOY,EAAV,iDAIXC,EAASb,IAAOc,OAAV,mHAONC,EAASf,IAAOC,IAAV,mDAINe,EAAOhB,IAAOC,IAAV,2HAOJgB,EAAMjB,IAAOkB,KAAV,gQAQE,SAACb,GAAD,OACPA,EAAMc,SAAWd,EAAM5B,MAAM+B,YAAcH,EAAM5B,MAAM2C,aAMrDC,EAAarB,IAAOC,IAAV,4HACM,SAACI,GAAD,OAAWA,EAAM5B,MAAM6C,WA2J9BC,I,gBAAAA,GApFf,WAAiB,IAAD,MACNtE,EAAWuE,cAAXvE,OACAwE,EAAUC,cAAVD,MACFE,EAAaC,YAAc,kBAC3BC,EAAaD,YAAc,kBACjC,EAAqD1E,mBACnD,CAAC,OAAQD,IACT,kBJzJyB,SAACA,GAC5B,OAAOT,MAAM,GAAD,OAAIF,EAAJ,kBAAsBW,IAAUR,MAAK,SAACC,GAAD,OAASA,EAAIC,UIwJtDmF,CAAc7E,MAFH8E,EAAnB,EAAQpE,UAAgCqE,EAAxC,EAAkCpE,KAIlC,EAA2DV,mBACzD,CAAC,UAAWD,IACZ,kBJzJ2B,SAACA,GAC9B,OAAOT,MAAM,GAAD,OAAIF,EAAJ,oBAAwBW,IAAUR,MAAK,SAACC,GAAD,OAASA,EAAIC,UIwJxDsF,CAAgBhF,KACtB,CACES,gBAAiB,MAJFwE,EAAnB,EAAQvE,UAAmCwE,EAA3C,EAAqCvE,KAQ/BwE,EAAUL,GAAiBG,EAEjC,OACE,eAAC,EAAD,WACE,cAACG,EAAA,EAAD,UACE,iCACQ,OAALZ,QAAK,IAALA,OAAA,EAAAA,EAAOxD,MAAOwD,EAAMxD,KAAOmE,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU/D,SAGnE,cAAC4C,EAAD,UACE,cAACP,EAAD,WACQ,OAALmB,QAAK,IAALA,OAAA,EAAAA,EAAOxD,MAAOwD,EAAMxD,KAAOmE,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU/D,SAGlEmE,EACC,cAACrB,EAAD,yBAEA,qCACE,cAAC,IAAD,CAAMuB,GAAG,IAAT,SACE,cAACjB,EAAD,6BAEF,eAACZ,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOsB,QAAP,IAAOA,OAAP,EAAOA,EAAUO,UAEnB,eAAC7B,EAAD,WACE,2CACA,4CAAQsB,QAAR,IAAQA,OAAR,EAAQA,EAAUQ,aAEpB,eAAC9B,EAAD,WACE,yCACA,4CAAQyB,QAAR,IAAQA,GAAR,UAAQA,EAAaM,cAArB,iBAAQ,EAAqBC,WAA7B,iBAAQ,EAA0BvE,aAAlC,aAAQ,EAAiC2B,QAAQ,YAGrD,cAACa,EAAD,iBAAcqB,QAAd,IAAcA,OAAd,EAAcA,EAAUW,cACxB,eAAClC,EAAD,WACE,eAACC,EAAD,WACE,gDACA,sCAAOyB,QAAP,IAAOA,OAAP,EAAOA,EAAaS,kBAEtB,eAAClC,EAAD,WACE,+CACA,sCAAOyB,QAAP,IAAOA,OAAP,EAAOA,EAAaU,mBAGxB,eAAC7B,EAAD,WACE,cAACC,EAAD,CAAKE,SAAyB,OAAfQ,EAAf,SACE,cAAC,IAAD,CAAMW,GAAE,WAAMrF,EAAN,UAAR,qBAEF,cAACgE,EAAD,CAAKE,SAAyB,OAAfU,EAAf,SACE,cAAC,IAAD,CAAMS,GAAE,WAAMrF,EAAN,UAAR,gCAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6F,KAAK,iBAAZ,SACE,cAAC,EAAD,CAAO7F,OAAQA,MAEjB,cAAC,IAAD,CAAO6F,KAAK,iBAAZ,SACE,cAAC,EAAD,CAAO7F,OAAQA,gBC7NvBqD,GAAQN,IAAOO,GAAV,+DAEA,SAACF,GAAD,OAAWA,EAAM5B,MAAM+B,eAG5BT,GAAYC,IAAOC,IAAV,0FAMTY,GAASb,IAAOc,OAAV,mHAONiC,GAAW/C,IAAOgD,GAAV,0BAERzB,GAAOvB,IAAOiD,GAAV,6TACY,SAAC5C,GAAD,OAAWA,EAAM5B,MAAMyE,eAClC,SAAC7C,GAAD,OAAWA,EAAM5B,MAAM2C,aAYnB,SAACf,GAAD,OAAWA,EAAM5B,MAAM+B,eAKhCO,GAASf,IAAOC,IAAV,mDAINkD,GAAMnD,IAAOoD,IAAV,oFAMHC,GAAYrD,IAAOkB,KAAV,oNAOD,SAACb,GAAD,OACVA,EAAMxC,OAASwC,EAAM5B,MAAM+B,YAAcH,EAAM5B,MAAM2C,aAwD1CkC,OAxCf,WACE,MAA4BpG,mBAAkB,WAAYX,GAAlDoB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACb2F,EAAcC,YAAkB5G,GAChCiB,EAASC,YAAelB,GAE9B,OACE,eAAC,GAAD,WACE,cAACyF,EAAA,EAAD,UACE,mDAEF,eAAC,GAAD,WACE,cAAC,GAAD,oBACA,cAACgB,GAAD,CAAWI,QARM,kBAAMF,GAAY,SAACG,GAAD,OAAWA,MAQV7F,OAAQA,EAA5C,SACGA,EAAS,eAAO,oBAGpBF,EACC,cAAC,GAAD,yBAEA,cAACoF,GAAD,iBACGnF,QADH,IACGA,OADH,EACGA,EAAM+F,MAAM,EAAG,KAAKzF,KAAI,SAAC0F,GAAD,OACvB,cAAC,GAAD,UACE,eAAC,IAAD,CACEtB,GAAI,CACFuB,SAAS,IAAD,OAAMD,EAAKE,IACnBrC,MAAO,CAAExD,KAAM2F,EAAK3F,OAHxB,UAME,cAACkF,GAAD,CACEY,IAAG,qDAAgDH,EAAKpB,OAAOwB,iBAEhEJ,EAAK3F,KATR,cADS2F,EAAKE,aCpFbG,I,GAAAA,GAdf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOnB,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,Y,SCVGoB,GAA0B,CACrC5C,QAAS,UACTF,UAAW,QACXZ,YAAa,UACb0C,YAAa,eAGFiB,GAA2B,CACtC7C,QAAS,aACTF,UAAW,QACXZ,YAAa,UACb0C,YAAa,SCNTkB,GAAcC,YAAH,u7CAsDK,SAAChE,GAAD,OAAWA,EAAM5B,MAAM6C,WAClC,SAACjB,GAAD,OAAWA,EAAM5B,MAAM2C,aAqBnBkD,OAbf,WACE,IAAMzG,EAASC,YAAelB,GAC9B,OACE,mCACE,eAAC,IAAD,CAAe6B,MAAOZ,EAASqG,GAAYC,GAA3C,UACE,cAACC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBG,eAAe,UCvErCC,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.52b27a85.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\n// React Query의 fetcher function은 반드시 json의 Promise를 반환해야 한다.\nexport const fetchCoins = () => {\n  return fetch(`${BASE_URL}/coins`).then((res) => res.json());\n};\n\nexport const fetchCoinInfo = (coinId: string) => {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json());\n};\n\nexport const fetchCoinTicker = (coinId: string) => {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json());\n};\n\nexport const fetchCoinHistory = (coinId: string) => {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 14;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((res) => res.json());\n};\n\nexport const fetchTodayPrice = (coinId: string) => {\n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/today/`).then((res) =>\n    res.json()\n  );\n};\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: true,\n});\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Close\",\n              data: data?.map((price) => price.close),\n            },\n            {\n              name: \"Open\",\n              data: data?.map((price) => price.open),\n            },\n            {\n              name: \"high\",\n              data: data?.map((price) => price.high),\n            },\n            {\n              name: \"low\",\n              data: data?.map((price) => price.low),\n            },\n          ]}\n          options={{\n            theme: { mode: isDark ? \"dark\" : \"light\" },\n            chart: { width: 500, height: 500, background: \"transparent\" },\n            stroke: { curve: \"smooth\", width: 3 },\n            yaxis: { show: false },\n            xaxis: {\n              type: \"datetime\",\n              labels: { show: false },\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"blue\"] },\n            },\n            tooltip: {\n              y: {\n                formatter: (value) => value.toFixed(3),\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchTodayPrice } from \"../api\";\n\ninterface ITodayPrice {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface PriceProps {\n  coinId: string;\n}\n\nconst Container = styled.div``;\nconst PriceInfo = styled.div`\n  margin: 10px 0px;\n`;\n\nconst Price = ({ coinId }: PriceProps) => {\n  const { isLoading, data } = useQuery<ITodayPrice[]>(\n    [\"todayPrice\", coinId],\n    () => fetchTodayPrice(coinId),\n    {\n      refetchInterval: 6000,\n    }\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading...\"\n      ) : (\n        <Container>\n          <PriceInfo>\n            Open:{data?.map((props) => props.open.toFixed(3))}\n          </PriceInfo>\n          <PriceInfo>\n            High:{data?.map((props) => props.high.toFixed(3))}\n          </PriceInfo>\n          <PriceInfo>\n            Close:{data?.map((props) => props.close.toFixed(3))}\n          </PriceInfo>\n          <PriceInfo>\n            Low:{data?.map((props) => props.low.toFixed(3))}\n          </PriceInfo>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport {\n  Link,\n  useRouteMatch,\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { fetchCoinInfo, fetchCoinTicker } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loader = styled.div`\n  text-align: center;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\nconst BackButton = styled.div`\n  background-color: ${(props) => props.theme.bgColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteStates {\n  name: string;\n}\n\ninterface IInfo {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface IPrice {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteStates>();\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const { isLoading: isInfoLoading, data: infoData } = useQuery<IInfo>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: isTickersLoading, data: tickersData } = useQuery<IPrice>(\n    [\"tickers\", coinId],\n    () => fetchCoinTicker(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = isInfoLoading || isTickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Link to=\"/\">\n            <BackButton>↩︎</BackButton>\n          </Link>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Today's Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path=\"/:coinId/price\">\n              <Price coinId={coinId} />\n            </Route>\n            <Route path=\"/:coinId/chart\">\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { fetchCoins } from \"../api\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n  border: 1px solid white;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in-out;\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Loader = styled.div`\n  text-align: center;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\nconst ToggleTab = styled.span<{ isDark: boolean }>`\n  text-align: center;\n  font-size: 24px;\n  padding: 7px 0px;\n  border-radius: 10px;\n  margin-left: 10px;\n  cursor: pointer;\n  /* color: ${(props) =>\n    props.isDark ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  } */\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const isDark = useRecoilValue(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n  return (\n    <Container>\n      <Helmet>\n        <title>Coin Tracker</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n        <ToggleTab onClick={toggleDarkAtom} isDark={isDark}>\n          {isDark ? \"🌝\" : \"🌚\"}\n        </ToggleTab>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                ></Img>\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}