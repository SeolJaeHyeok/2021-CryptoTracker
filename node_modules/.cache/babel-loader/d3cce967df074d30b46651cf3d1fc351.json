{"ast":null,"code":"import{useQuery}from\"react-query\";import{fetchCoinHistory}from\"../api\";import ApexChart from\"react-apexcharts\";import{useRecoilValue}from\"recoil\";import{isDarkAtom}from\"../atoms\";import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=function Chart(_ref){var coinId=_ref.coinId;var _useQuery=useQuery([\"ohlcv\",coinId],function(){return fetchCoinHistory(coinId);},{refetchInterval:10000}),isLoading=_useQuery.isLoading,data=_useQuery.data;var isDark=useRecoilValue(isDarkAtom);return/*#__PURE__*/_jsx(\"div\",{children:isLoading?\"Loading Chart...\":/*#__PURE__*/_jsx(ApexChart,{type:\"line\",series:[{name:\"Close\",data:data===null||data===void 0?void 0:data.map(function(price){return price.close;})},{name:\"Open\",data:data===null||data===void 0?void 0:data.map(function(price){return price.open;})},{name:\"high\",data:data===null||data===void 0?void 0:data.map(function(price){return price.high;})},{name:\"low\",data:data===null||data===void 0?void 0:data.map(function(price){return price.low;})}],options:{theme:{mode:isDark?\"dark\":\"light\"},chart:{width:500,height:500,background:\"transparent\"},stroke:{curve:\"smooth\",width:3},yaxis:{show:false},xaxis:{type:\"datetime\",labels:{show:false},categories:data===null||data===void 0?void 0:data.map(function(price){return price.time_close;})},fill:{type:\"gradient\",gradient:{gradientToColors:[\"blue\"]}},tooltip:{y:{formatter:function formatter(value){return value.toFixed(3);}}}}})});};export default Chart;","map":{"version":3,"sources":["/Users/seoljaehyeok/2021-cryptotracker/src/routes/Chart.tsx"],"names":["useQuery","fetchCoinHistory","ApexChart","useRecoilValue","isDarkAtom","Chart","coinId","refetchInterval","isLoading","data","isDark","name","map","price","close","open","high","low","theme","mode","chart","width","height","background","stroke","curve","yaxis","show","xaxis","type","labels","categories","time_close","fill","gradient","gradientToColors","tooltip","y","formatter","value","toFixed"],"mappings":"AAAA,OAASA,QAAT,KAAyB,aAAzB,CACA,OAASC,gBAAT,KAAiC,QAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,OAASC,cAAT,KAA+B,QAA/B,CACA,OAASC,UAAT,KAA2B,UAA3B,C,2CAiBA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA4B,IAAzBC,CAAAA,MAAyB,MAAzBA,MAAyB,CACxC,cAA4BN,QAAQ,CAClC,CAAC,OAAD,CAAUM,MAAV,CADkC,CAElC,iBAAML,CAAAA,gBAAgB,CAACK,MAAD,CAAtB,EAFkC,CAGlC,CACEC,eAAe,CAAE,KADnB,CAHkC,CAApC,CAAQC,SAAR,WAAQA,SAAR,CAAmBC,IAAnB,WAAmBA,IAAnB,CAOA,GAAMC,CAAAA,MAAM,CAAGP,cAAc,CAACC,UAAD,CAA7B,CACA,mBACE,qBACGI,SAAS,CACR,kBADQ,cAGR,KAAC,SAAD,EACE,IAAI,CAAC,MADP,CAEE,MAAM,CAAE,CACN,CACEG,IAAI,CAAE,OADR,CAEEF,IAAI,CAAEA,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEG,GAAN,CAAU,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAjB,EAAV,CAFR,CADM,CAKN,CACEH,IAAI,CAAE,MADR,CAEEF,IAAI,CAAEA,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEG,GAAN,CAAU,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACE,IAAjB,EAAV,CAFR,CALM,CASN,CACEJ,IAAI,CAAE,MADR,CAEEF,IAAI,CAAEA,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEG,GAAN,CAAU,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACG,IAAjB,EAAV,CAFR,CATM,CAaN,CACEL,IAAI,CAAE,KADR,CAEEF,IAAI,CAAEA,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEG,GAAN,CAAU,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACI,GAAjB,EAAV,CAFR,CAbM,CAFV,CAoBE,OAAO,CAAE,CACPC,KAAK,CAAE,CAAEC,IAAI,CAAET,MAAM,CAAG,MAAH,CAAY,OAA1B,CADA,CAEPU,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,GAAtB,CAA2BC,UAAU,CAAE,aAAvC,CAFA,CAGPC,MAAM,CAAE,CAAEC,KAAK,CAAE,QAAT,CAAmBJ,KAAK,CAAE,CAA1B,CAHD,CAIPK,KAAK,CAAE,CAAEC,IAAI,CAAE,KAAR,CAJA,CAKPC,KAAK,CAAE,CACLC,IAAI,CAAE,UADD,CAELC,MAAM,CAAE,CAAEH,IAAI,CAAE,KAAR,CAFH,CAGLI,UAAU,CAAEtB,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEG,GAAN,CAAU,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACmB,UAAjB,EAAV,CAHP,CALA,CAUPC,IAAI,CAAE,CACJJ,IAAI,CAAE,UADF,CAEJK,QAAQ,CAAE,CAAEC,gBAAgB,CAAE,CAAC,MAAD,CAApB,CAFN,CAVC,CAcPC,OAAO,CAAE,CACPC,CAAC,CAAE,CACDC,SAAS,CAAE,mBAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAX,EADV,CADI,CAdF,CApBX,EAJJ,EADF,CAiDD,CA1DD,CA4DA,cAAenC,CAAAA,KAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Close\",\n              data: data?.map((price) => price.close),\n            },\n            {\n              name: \"Open\",\n              data: data?.map((price) => price.open),\n            },\n            {\n              name: \"high\",\n              data: data?.map((price) => price.high),\n            },\n            {\n              name: \"low\",\n              data: data?.map((price) => price.low),\n            },\n          ]}\n          options={{\n            theme: { mode: isDark ? \"dark\" : \"light\" },\n            chart: { width: 500, height: 500, background: \"transparent\" },\n            stroke: { curve: \"smooth\", width: 3 },\n            yaxis: { show: false },\n            xaxis: {\n              type: \"datetime\",\n              labels: { show: false },\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"blue\"] },\n            },\n            tooltip: {\n              y: {\n                formatter: (value) => value.toFixed(3),\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}